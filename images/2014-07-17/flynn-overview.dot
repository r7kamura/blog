digraph G {
  subgraph cluster0 {
    subgraph cluster0 {
      subgraph cluster0 {
        label="Host A";
        node[shape="box3d",colorscheme="blues8",style="filled"];
        hostA[fillcolor="3",label="leader-host"];
        containerA[label="container",fillcolor="4"];
        hostA -> containerA[label="run"];
      }
      subgraph cluster1 {
        label="Host B";
        node[shape="box3d",colorscheme="blues8",style="filled"];
        hostB[fillcolor="3",label="slave-host"];
        containerB[label="container",fillcolor="4"];
        hostB -> containerB[label="run"];
      }
      subgraph cluster2 {
        label="Host C";
        node[shape="box3d",colorscheme="blues8",style="filled"];
        hostC[fillcolor="3",label="slave-host"];
        containerC[label="container",fillcolor="4"];
        hostC -> containerC[label="run"];
      }
      label="Cluster";
    }
    subgraph cluster1 {
      label="Git";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      gitreceived[fillcolor="3"];
    }
    subgraph cluster2 {
      label="Slug";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      shelf[fillcolor="3"];
    }
    subgraph cluster3 {
      label="API";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      controller[fillcolor="3"];
    }
    subgraph cluster4 {
      label="Scheduler";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      scheduler[fillcolor="3"];
    }
    subgraph cluster5 {
      label="Proxy";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      strowger[fillcolor="3"];
    }
    subgraph cluster6 {
      label="DB";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      postgres[fillcolor="3"];
    }
    label="Flynn Servers";
  }
  subgraph cluster1 {
    subgraph cluster0 {
      label="Developer";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      shell[fillcolor="2",label="shell"];
    }
    subgraph cluster1 {
      label="User";
      node[shape="box3d",colorscheme="blues8",style="filled"];
      userAgent[fillcolor="2",label="user agent"];
    }
    label="Internet";
  }
  node[shape="box3d",colorscheme="blues8",style="filled"];
  shell;
  gitreceived;
  controller;
  shelf;
  strowger;
  postgres;
  scheduler;
  hostA;
  hostB;
  hostC;
  userAgent;
  containerA;
  containerB;
  containerC;
  shell -> gitreceived[label="git-push(1)"];
  shell -> controller[label="request"];
  gitreceived -> shelf[label="upload"];
  gitreceived -> controller[label="release"];
  controller -> strowger[label="route"];
  controller -> postgres[label="update"];
  scheduler -> postgres[label="listen"];
  scheduler -> hostA[label="job"];
  hostA -> hostB[label="job"];
  hostA -> hostC[label="job"];
  userAgent -> strowger[label="request",color="maroon"];
  strowger -> containerA[label="proxy",color="maroon"];
  strowger -> containerB[label="proxy",color="maroon"];
  strowger -> containerC[label="proxy",color="maroon"];
  hostA -> shelf[label="download"];
  hostB -> shelf[label="download"];
  hostC -> shelf[label="download"];
}
